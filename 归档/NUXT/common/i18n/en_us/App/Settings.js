module.exports = {
  sideBar: {
    nav1: 'Basic Information',
    nav2: 'Security Settings',
    nav3: 'Baking Histroy',
    nav4: 'Trading API',
  },
  baseTitle: 'Basic Information',
  account: {
    name: 'ID',
    level: 'Membership Level',
    nDesc: 'Private Identifier for your RightBTC account. ',
    lDesc: 'Set up your 2FA Google Authentication and complete your identification process to level up.',
  },
  tel: {
    name: 'Bind mobile phone',
    desc: 'For notification upon recover of your identity verification and password reset',
  },
  email: {
    name: 'Email',
    desc: 'For notification upon recover of your identity verification and password reset',
  },
  identityTitle: 'KYC',
  c1: {
    name: 'C1 certification',
    desc: 'The name and ID number verifications are prerequisites for the completion of C2 real-name authentication',
  },
  c2: {
    name: 'C2 certification',
    desc: 'Must complete the C1 real-name authentication first, then upload the front and back pictures of ID card',
  },
  secuTitle: 'Security Settings',
  login: {
    name: 'Login Password',
    desc: 'For password security, please use a strong password.',
  },
  funds: {
    name: 'Trading password',
    desc: 'Trading password is required on change of account. Frequency can be adjusted to your personal need.',
  },
  FATitle: 'Two-Factor Authentication',
  google: {
    name: 'Google Authentication',
    desc: 'Use Google Authenticator mobile app for 2FA security verification',
  },
  otherTitle: 'Other',
  api: {
    name: 'API Port',
    desc: 'E-trading system only for VIP user',
  },
  workOrder: {
    name: 'User ticket list',
    desc: 'Use when platform is inconvenient',
  },
  c1Title: ['C1 information details', 'Failure Reasonsï¼š'],
  binding: 'Bind',
  binded: 'Bound',
  unbounded: 'Not bind yet',
  unbundling: 'Unbind',
  certify: 'To certify',
  certified: 'Check',
  c1Certify: 'Please complete C1 certification',
  gain: 'Get',
  edit: 'Edit',
  entry: 'Entry',
  editPwd: 'Need to verify the Trading password every time',
  notSet: 'Not Set',
  beenSet: 'Set successful',
  userKey: {
    name: 'Name',
    country: 'Nationality',
    docuType: 'Certificate Type',
    docuNum: 'ID number',
  },
  certifyList: ['Identity Card', 'Driving license', 'Passport'],
  pending: 'Pending',
  AuthFail: ['Authentication failed, please submit C1 again.', 'Authentication failed, please submit again.', 'Failed'],
  finish: 'Certified',
  apiTit: 'Trading API',
  apiKey: 'API Key',
  apiSign: 'Signiture',
  privateKey: 'Private key',
};
